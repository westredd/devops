<powershell>
start-sleep -s 5


start-transcript -path C:\userdata.txt -noclobber -append 

install-windowsfeature powershell-v2
install-windowsfeature AS-NET-Framework
install-windowsfeature NET-Framework-45-Core
new-item -Type directory c:\source
Set-ExecutionPolicy unrestricted -Force
iwr https://downloads.puppetlabs.com/windows/puppet-agent-x64-latest.msi -OutFile c:\source\puppet-agent-x64-latest.msi
start-sleep -seconds 60
msiexec /i "c:\source\puppet-agent-x64-latest.msi" /qn /norestart
start-sleep -seconds 90
stop-service Puppet
set-service Puppet -startupType disabled
#c:\source\codedeploy-agent-1.0.1.998.msi /qn /norestart
#$env:chocolateyVersion = "0.10.3"
#iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex
#choco install -y powershell
#Read-S3Object -BucketName aws-codedeploy-eu-west-1 -Key releases/codedeploy-agent-1.0.1.998.msi -File c:\source\codedeploy-agent-1.0.1.998.msi
#start-sleep -seconds 60
#msiexec /i "c:\source\codedeploy-agent-1.0.1.998.msi" /qn
net user Administrator flytr4p!

$instanceId = (iwr http://169.254.169.254/latest/meta-data/instance-id -usebasicparsing).content

$tags = (get-ec2tag | where-object {$_.resourceId -eq $instanceId})

$nameTag = ($tags | where-object {$_.key -eq "Name"}).value
$environmentTag = ($tags | where-object {$_.key -eq "oEnvironment"}).value
$projectTag = ($tags | where-object {$_.key -eq "uProjectOrService"}).value
$roleTag = ($tags | where-object {$_.key -eq "uRole"}).value

$puppetRoot = "C:\ProgramData\PuppetLabs"
$puppetCodeLoc = "\code"
$puppetManifestLoc = "\code\environments\$environmentTag\manifests\site.pp"

$location = (convertfrom-json (iwr http://169.254.169.254/latest/dynamic/instance-identity/document -usebasicparsing).content).region

$CustomFactLocation = "C:\ProgramData\PuppetLabs\facter\facts.d\"
$CustomFactFileName = "customfacts.ps1"

if(Test-Path $CustomFactLocation$CustomFactFileName){
  Remove-Item $CustomFactLocation$CustomFactFileName -force
}

New-Item $CustomFactLocation$CustomFactFileName -type File

if ($octopusEnvironment -eq $null -and $octopusRoleTag -eq $null){
Add-Content $CustomFactLocation$CustomFactFileName @"
"authorativename=$nameTag"
"environment=$environmentTag"
"location=$location"
"project=$projectTag"
"role=$roleTag"
"@
}
else{
Add-Content $CustomFactLocation$CustomFactFileName @"
"authorativename=$nameTag"
"environment=$environmentTag"
"location=$location"
"project=$projectTag"
"role=$roleTag"
"octopusenvironment=$OctopusEnvironmentTag"
"octopusrole=$OctopusRoleTag"
"@
}

#Set Scheduled task
$environmentTag = ($tags | where-object {$_.key -eq "oEnvironment"}).value
$puppetManifestLoc = "\code\environments\$environmentTag\manifests\site.pp"
$puppetRoot = "C:\ProgramData\PuppetLabs"
#$stAction = New-ScheduledTaskAction -Execute "puppet" -Argument "apply $puppetRoot$puppetManifestLoc --environment=$environmentTag"
$stAction = New-ScheduledTaskAction -Execute "C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" -Argument "C:\ProgramData\PuppetLabs\code\puppet-custom-apply.ps1"
$stPrincipal = New-ScheduledTaskPrincipal -UserId "NT Authority\System" -LogonType ServiceAccount -RunLevel Highest
$stTrigger  = New-ScheduledTaskTrigger -AtStartup
$st = New-ScheduledTask -Action $stAction -Principal $stPrincipal -Trigger $stTrigger
Register-ScheduledTask RunPuppetOnBoot -InputObject $st -Force


write-host "End of Script"
stop-transcript 

</powershell>